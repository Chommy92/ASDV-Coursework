shapiro.test(df_model$`Female_Population(15-19)`)
shapiro.test(df_model$`Male_Population(30-34)`)
shapiro.test(df_model$`Male_Population(15-19)`)
shapiro.test(df_model$Female_LifeExpectancyAtBirth)
shapiro.test(df_model$Male_LifeExpectancyAtBirth)
df_model$`Female_Population(30-34)` <- log10(df_model$`Female_Population(30-34)`)
shapiro.test(df_model$`Female_Population(30-34)`)
df_model$`Female_Population(15-19)` <- log10(df_model$`Female_Population(15-19)`)
shapiro.test(df_model$`Female_Population(15-19)`)
df_model$`Male_Population(30-34)` <- log10(df_model$`Male_Population(30-34)`)
shapiro.test(df_model$`Male_Population(30-34)`)
df_model$`Male_Population(15-19)` <- log10(df_model$`Male_Population(15-19)`)
shapiro.test(df_model$`Male_Population(15-19)`)
df_model$Female_LifeExpectancyAtBirth <- log10(df_model$Female_LifeExpectancyAtBirth)
shapiro.test(df_model$Female_LifeExpectancyAtBirth)
df_model$Male_LifeExpectancyAtBirth <- log10(df_model$Male_LifeExpectancyAtBirth)
shapiro.test(df_model$Male_LifeExpectancyAtBirth)
s_model_1 <- lm(`Female_Population(30-34)`~ `Male_Population(15-19)`, df_model)
summary.lm(s_model_1)
library(report)
report(s_model_1)
plot(`Female_Population(30-34)` ~ `Male_Population(15-19)` , df_model,
col = "blue",
main = "Regression: Female_Population(30-34) & Male_Population(15-19)",
xlab = "Male_Population(15-19)",
ylab = "Female_Population(30-34)")
plot(`Female_Population(30-34)` ~ `Male_Population(15-19)` , df_model,
col = "blue",
main = "Regression: Female_Population(30-34) & Male_Population(15-19)",
xlab = "Male_Population(15-19)",
ylab = "Female_Population(30-34)")
abline(s_model_1, col = "red")
plot(s_model_1, 1)
plot(s_model_1, 2)
plot(s_model_1, 3)
head(df)
multiplelinear <- df %>% select(-Year, -Country)
head(multiplelinear)
corrplot(cor(multiplelinear))
model_2 <- lm(`Female_Population(30-34)`~  `Male_Population(15-19)` + Female_LifeExpectancyAtBirth, multiplelinear)
summary(model_2)
check_model(model_2)
vif(model_2)
corrplot(cor(df_model))
model_2 <- lm(`Female_Population(30-34)`~  `Male_Population(15-19)` + Female_LifeExpectancyAtBirth, df_model)
summary(model_2)
check_model(model_2)
vif(model_2)
shapiro.test(df_model$`Female_Population(15-19)`)
library(ggplot2)
library(qqplotr)
library(tidyverse)
library(RVAideMemoire)
library(performance)
library(see)
library(car)
library(car)
df <- read.csv("Gender_stats.csv", header =TRUE)
head(df)
names(df)
colnames(df) <- c("Year", "Country", "Female_LifeExpectancyAtBirth", "Male_LifeExpectancyAtBirth", "Female_Population(30-34)", "Male_Population(30-34)", "Male_Population(15-19)", "Female_Population(15-19)")
colnames(df)
head(df)
summary(df)
df_model <- df %>% select(-Year, -Country)
head(df_model)
# correlation between all numerical variables
round(cor(df_model),
digits = 3)
library(corrplot)
# to visualize it on a graph
corrplot(cor(df_model),
method = "number",
type = "upper")
shapiro.test(df_model$`Female_Population(30-34)`)
shapiro.test(df_model$`Male_Population(15-19)`)
shapiro.test(df_model$Female_LifeExpectancyAtBirth)
df_model$`Female_Population(30-34)` <- log10(df_model$`Female_Population(30-34)`)
shapiro.test(df_model$`Female_Population(30-34)`)
df_model$`Male_Population(15-19)` <- log10(df_model$`Male_Population(15-19)`)
shapiro.test(df_model$`Male_Population(15-19)`)
df_model$Female_LifeExpectancyAtBirth <- log10(df_model$Female_LifeExpectancyAtBirth)
shapiro.test(df_model$Female_LifeExpectancyAtBirth)
df_model$Male_LifeExpectancyAtBirth <- log10(df_model$Male_LifeExpectancyAtBirth)
shapiro.test(df_model$Male_LifeExpectancyAtBirth)
s_model_1 <- lm(`Female_Population(30-34)`~ `Male_Population(15-19)`, df_model)
summary.lm(s_model_1)
library(report)
report(s_model_1)
plot(`Female_Population(30-34)` ~ `Male_Population(15-19)` , df_model,
col = "blue",
main = "Regression: Female_Population(30-34) & Male_Population(15-19)",
xlab = "Male_Population(15-19)",
ylab = "Female_Population(30-34)")
plot(`Female_Population(30-34)` ~ `Male_Population(15-19)` , df_model,
col = "blue",
main = "Regression: Female_Population(30-34) & Male_Population(15-19)",
xlab = "Male_Population(15-19)",
ylab = "Female_Population(30-34)")
abline(s_model_1, col = "red")
plot(s_model_1, 1)
plot(s_model_1, 2)
plot(s_model_1, 3)
corrplot(cor(df_model))
model_2 <- lm(`Female_Population(30-34)`~  `Male_Population(15-19)` + Female_LifeExpectancyAtBirth, df_model)
summary(model_2)
check_model(model_2)
vif(model_2)
x <- t.test(Female_LifeExpectancyAtBirth ~ Country, data = df_country)
library(ggplot2)
library(qqplotr)
library(multcomp)
library(tidyverse)
library(RVAideMemoire)
library(car)
library(report)
df <- read.csv("Gender_stats.csv", header =TRUE)
head(df)
names(df)
colnames(df) <- c("Year", "Country", "Female_LifeExpectancyAtBirth", "Male_LifeExpectancyAtBirth", "Female_Population(30-34)", "Male_Population(30-34)", "Male_Population(15-19)", "Female_Population(15-19)")
colnames(df)
head(df)
summary(df)
#LETS SELECT A DEPENDENT VARIABLE(NUMERICAL)  AND INDEPENDENT VARIABLE (CATEGORICAL)FROM THE DATASET
genderStats <- df %>% select(Country, Male_LifeExpectancyAtBirth)
genderStats
genderStats <- genderStats[genderStats$Country == "Afghanistan" | genderStats$Country == "Chad" | genderStats$Country == "Ethiopia" | genderStats$Country == "Canada" | genderStats$Country == "India" | genderStats$Country == "China", ]
head(genderStats)
genderStats$Country <- as.factor(genderStats$Country)
summary(genderStats)
# we will draw a boxplot to check this
boxplot(Male_LifeExpectancyAtBirth ~ Country , data=genderStats,
names=c("Canada", "China", "Ethiopia", "Chad", "Afghanistan", "India"),
xlab="Countries",
ylab="Population",
main="Male Life Expectancy At Birth For Countries")
#I WILL USE A PACKAGE CALLED RVAideMemoire
byf.shapiro(Male_LifeExpectancyAtBirth ~ Country, data=genderStats)
bartlett.test(Male_LifeExpectancyAtBirth ~ Country, data=genderStats)
oneway.test(Male_LifeExpectancyAtBirth ~ Country,
data=genderStats,
var.equal = FALSE)
welch_test <- aov(Male_LifeExpectancyAtBirth ~ Country,
data = genderStats,
)
summary(welch_test)
# Tukey HSD test:
post_test <- glht(welch_test,
linfct = mcp(Country = "Tukey")
)
summary(post_test)
head(df)
df <- df %>% select(Country, Female_LifeExpectancyAtBirth)
df
df_country <- df[df$Country == "United Kingdom" | df$Country == "Nigeria", ]
df_country
by(df_country, df_country$Country, summary)
df_country$Country <- as.factor(df_country$Country)
by(df_country, df_country$Country, summary)
ggplot(df_country) +
aes(x = Country, y = Female_LifeExpectancyAtBirth) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal()
hist(subset(df_country, Country == "United Kingdom")$Female_LifeExpectancyAtBirth,
main = "Female_LifeExpectancyAtBirth for United Kingdom",
xlab = "Female_LifeExpectancyAtBirth",
col = "coral"
)
hist(subset(df_country, Country == "Nigeria")$Female_LifeExpectancyAtBirth,
main = "Female_LifeExpectancyAtBirth for Nigeria",
xlab = "Female_LifeExpectancyAtBirth",
col = "coral"
)
byf.shapiro(Female_LifeExpectancyAtBirth ~ Country, df_country)
x <- t.test(Female_LifeExpectancyAtBirth ~ Country, data = df_country)
x
report(x)
library(ggplot2)
library(qqplotr)
library(tidyverse)
library(RVAideMemoire)
library(Hmisc)
df <- read.csv("Gender_stats.csv", header =TRUE)
head(df)
names(df)
colnames(df) <- c("Year", "Country", "Female_LifeExpectancyAtBirth", "Male_LifeExpectancyAtBirth", "Female_Population(30-34)", "Male_Population(30-34)", "Male_Population(15-19)", "Female_Population(15-19)")
colnames(df)
head(df)
tail(df)
str(df)
by(df, df$Country, summary)
# using lapply() function for standard deviation of all the columns at once
lapply(df[, 3:8], sd)
tab <- table(df$Female_LifeExpectancyAtBirth) # number of occurrences for each unique value
sort(tab, decreasing = TRUE) # sort highest to lowest
tab <- table(df$Male_LifeExpectancyAtBirth) # number of occurrences for each unique value
sort(tab, decreasing = TRUE)
tab <- table(df$`Female_Population(30-34)`) # number of occurrences for each unique value
sort(tab, decreasing = TRUE) # sort from highest to lowest
tab <- table(df$`Male_Population(30-34)`) # number of occurrences for each unique value
sort(tab, decreasing = TRUE)
tab <- table(df$`Male_Population(15-19)`) # number of occurrences for each unique value
sort(tab, decreasing = TRUE) # sort highest to lowest
tab <- table(df$`Female_Population(15-19)`) # number of occurrences for each unique value
sort(tab, decreasing = TRUE)
library(moments)
skewness(df$Female_LifeExpectancyAtBirth)
skewness(df$Male_LifeExpectancyAtBirth)
skewness(df$`Female_Population(30-34)`)
skewness(df$`Male_Population(30-34)`)
skewness(df$`Male_Population(15-19)`)
skewness(df$`Female_Population(15-19)`)
skewness(df$Year)
kurtosis(df$Female_LifeExpectancyAtBirth)
kurtosis(df$Male_LifeExpectancyAtBirth)
kurtosis(df$`Female_Population(30-34)`)
kurtosis(df$`Male_Population(30-34)`)
kurtosis(df$`Male_Population(15-19)`)
kurtosis(df$`Female_Population(15-19)`)
kurtosis(df$Year)
# before doing correlation analysis, i have to remove the categorical varaible from the dataset.
new_df <- df %>% select(-Country, -Year)
head(new_df)
# correlation for all the variables
round(cor(new_df),
digits = 2) # rounded to 2 decimals
library(corrplot)
corrplot(cor(new_df),
method = "number",
type = "upper" # show only upper side
)
# correlation tests for whole dataset
res <- rcorr(as.matrix(new_df)) # rcorr() accepts matrices only
# display p-values (rounded to 3 decimals)
round(res$P, 3)
library(ggplot2)
library(qqplotr)
library(tidyverse)
library(RVAideMemoire)
library(performance)
library(see)
library(car)
library(car)
df <- read.csv("Gender_stats.csv", header =TRUE)
head(df)
names(df)
colnames(df) <- c("Year", "Country", "Female_LifeExpectancyAtBirth", "Male_LifeExpectancyAtBirth", "Female_Population(30-34)", "Male_Population(30-34)", "Male_Population(15-19)", "Female_Population(15-19)")
colnames(df)
head(df)
summary(df)
df_model <- df %>% select(-Year, -Country)
head(df_model)
# correlation between all numerical variables
round(cor(df_model),
digits = 3)
library(corrplot)
# to visualize it on a graph
corrplot(cor(df_model),
method = "number",
type = "upper")
shapiro.test(df_model$`Female_Population(30-34)`)
shapiro.test(df_model$`Male_Population(15-19)`)
shapiro.test(df_model$Female_LifeExpectancyAtBirth)
df_model$`Female_Population(30-34)` <- log10(df_model$`Female_Population(30-34)`)
shapiro.test(df_model$`Female_Population(30-34)`)
df_model$`Male_Population(15-19)` <- log10(df_model$`Male_Population(15-19)`)
shapiro.test(df_model$`Male_Population(15-19)`)
df_model$Female_LifeExpectancyAtBirth <- log10(df_model$Female_LifeExpectancyAtBirth)
shapiro.test(df_model$Female_LifeExpectancyAtBirth)
df_model$Male_LifeExpectancyAtBirth <- log10(df_model$Male_LifeExpectancyAtBirth)
shapiro.test(df_model$Male_LifeExpectancyAtBirth)
s_model_1 <- lm(`Female_Population(30-34)`~ `Male_Population(15-19)`, df_model)
summary.lm(s_model_1)
library(report)
report(s_model_1)
plot(`Female_Population(30-34)` ~ `Male_Population(15-19)` , df_model,
col = "blue",
main = "Regression: Female_Population(30-34) & Male_Population(15-19)",
xlab = "Male_Population(15-19)",
ylab = "Female_Population(30-34)")
plot(`Female_Population(30-34)` ~ `Male_Population(15-19)` , df_model,
col = "blue",
main = "Regression: Female_Population(30-34) & Male_Population(15-19)",
xlab = "Male_Population(15-19)",
ylab = "Female_Population(30-34)")
abline(s_model_1, col = "red")
plot(s_model_1, 1)
plot(s_model_1, 2)
plot(s_model_1, 3)
corrplot(cor(df_model))
model_2 <- lm(`Female_Population(30-34)`~  `Male_Population(15-19)` + Female_LifeExpectancyAtBirth, df_model)
summary(model_2)
check_model(model_2)
vif(model_2)
library(ggplot2)
library(qqplotr)
library(tidyverse)
library(RVAideMemoire)
library(Hmisc)
df <- read.csv("Gender_stats.csv", header =TRUE)
head(df)
names(df)
colnames(df) <- c("Year", "Country", "Female_LifeExpectancyAtBirth", "Male_LifeExpectancyAtBirth", "Female_Population(30-34)", "Male_Population(30-34)", "Male_Population(15-19)", "Female_Population(15-19)")
colnames(df)
head(df)
tail(df)
str(df)
by(df, df$Country, summary)
# using lapply() function for standard deviation of all the columns at once
lapply(df[, 3:8], sd)
tab <- table(df$Female_LifeExpectancyAtBirth) # number of occurrences for each unique value
sort(tab, decreasing = TRUE) # sort highest to lowest
tab <- table(df$Male_LifeExpectancyAtBirth) # number of occurrences for each unique value
sort(tab, decreasing = TRUE)
tab <- table(df$`Female_Population(30-34)`) # number of occurrences for each unique value
sort(tab, decreasing = TRUE) # sort from highest to lowest
tab <- table(df$`Male_Population(30-34)`) # number of occurrences for each unique value
sort(tab, decreasing = TRUE)
tab <- table(df$`Male_Population(15-19)`) # number of occurrences for each unique value
sort(tab, decreasing = TRUE) # sort highest to lowest
tab <- table(df$`Female_Population(15-19)`) # number of occurrences for each unique value
sort(tab, decreasing = TRUE)
library(moments)
skewness(df$Female_LifeExpectancyAtBirth)
skewness(df$Male_LifeExpectancyAtBirth)
skewness(df$`Female_Population(30-34)`)
skewness(df$`Male_Population(30-34)`)
skewness(df$`Male_Population(15-19)`)
skewness(df$`Female_Population(15-19)`)
skewness(df$Year)
kurtosis(df$Female_LifeExpectancyAtBirth)
kurtosis(df$Male_LifeExpectancyAtBirth)
kurtosis(df$`Female_Population(30-34)`)
kurtosis(df$`Male_Population(30-34)`)
kurtosis(df$`Male_Population(15-19)`)
kurtosis(df$`Female_Population(15-19)`)
kurtosis(df$Year)
# before doing correlation analysis, i have to remove the categorical varaible from the dataset.
new_df <- df %>% select(-Country, -Year)
head(new_df)
# correlation for all the variables
round(cor(new_df),
digits = 2) # rounded to 2 decimals
library(corrplot)
corrplot(cor(new_df),
method = "number",
type = "upper" # show only upper side
)
# correlation tests for whole dataset
res <- rcorr(as.matrix(new_df)) # rcorr() accepts matrices only
# display p-values (rounded to 3 decimals)
round(res$P, 3)
library(ggplot2)
library(qqplotr)
library(multcomp)
library(tidyverse)
library(RVAideMemoire)
library(car)
library(report)
df <- read.csv("Gender_stats.csv", header =TRUE)
head(df)
names(df)
colnames(df) <- c("Year", "Country", "Female_LifeExpectancyAtBirth", "Male_LifeExpectancyAtBirth", "Female_Population(30-34)", "Male_Population(30-34)", "Male_Population(15-19)", "Female_Population(15-19)")
colnames(df)
head(df)
summary(df)
#LETS SELECT A DEPENDENT VARIABLE(NUMERICAL)  AND INDEPENDENT VARIABLE (CATEGORICAL)FROM THE DATASET
genderStats <- df %>% select(Country, Male_LifeExpectancyAtBirth)
genderStats
genderStats <- genderStats[genderStats$Country == "Afghanistan" | genderStats$Country == "Chad" | genderStats$Country == "Ethiopia" | genderStats$Country == "Canada" | genderStats$Country == "India" | genderStats$Country == "China", ]
head(genderStats)
genderStats$Country <- as.factor(genderStats$Country)
summary(genderStats)
# we will draw a boxplot to check this
boxplot(Male_LifeExpectancyAtBirth ~ Country , data=genderStats,
names=c("Canada", "China", "Ethiopia", "Chad", "Afghanistan", "India"),
xlab="Countries",
ylab="Population",
main="Male Life Expectancy At Birth For Countries")
#I WILL USE A PACKAGE CALLED RVAideMemoire
byf.shapiro(Male_LifeExpectancyAtBirth ~ Country, data=genderStats)
bartlett.test(Male_LifeExpectancyAtBirth ~ Country, data=genderStats)
oneway.test(Male_LifeExpectancyAtBirth ~ Country,
data=genderStats,
var.equal = FALSE)
welch_test <- aov(Male_LifeExpectancyAtBirth ~ Country,
data = genderStats,
)
summary(welch_test)
# Tukey HSD test:
post_test <- glht(welch_test,
linfct = mcp(Country = "Tukey")
)
summary(post_test)
head(df)
df <- df %>% select(Country, Female_LifeExpectancyAtBirth)
df
df_country <- df[df$Country == "United Kingdom" | df$Country == "Nigeria", ]
df_country
by(df_country, df_country$Country, summary)
df_country$Country <- as.factor(df_country$Country)
by(df_country, df_country$Country, summary)
ggplot(df_country) +
aes(x = Country, y = Female_LifeExpectancyAtBirth) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal()
hist(subset(df_country, Country == "United Kingdom")$Female_LifeExpectancyAtBirth,
main = "Female_LifeExpectancyAtBirth population in United Kingdom",
xlab = "Female_LifeExpectancyAtBirth",
col = "coral"
)
hist(subset(df_country, Country == "Nigeria")$Female_LifeExpectancyAtBirth,
main = "Female_LifeExpectancyAtBirth for Nigeria",
xlab = "Female_LifeExpectancyAtBirth",
col = "coral"
)
byf.shapiro(Female_LifeExpectancyAtBirth ~ Country, df_country)
x <- t.test(Female_LifeExpectancyAtBirth ~ Country, data = df_country)
x
report(x)
library(tidyverse)
library(forecast)
library(TTR)
library(tseries)
df = read.csv("Gender_stats.csv")
head(df)
colnames(df) <- c("Date", "Country", "Female_LifeExpectancyAtBirth", "Male_LifeExpectancyAtBirth", "Female_Population(30-34)", "Male_Population(30-34)", "Male_Population(15-19)", "Female_Population(15-19)")
colnames(df)
df <- df %>% select(Date, Male_LifeExpectancyAtBirth)
head(df)
df$Male_LifeExpectancyAtBirth <- round(df$Male_LifeExpectancyAtBirth,digits = 1)
head(df)
class(df)
gendertime <- ts(df$Male_LifeExpectancyAtBirth, start = min(df$Date), end = max(df$Date), frequency = 1)
class(gendertime)
plot.ts(gendertime)
#gendertime_smooth <- SMA(gendertime, n = 3)
#plot.ts(gendertime_smooth)
gendertime_smoothforecast <- HoltWinters(gendertime, gamma = FALSE)
gendertime_smoothforecast
plot(gendertime_smoothforecast)
gendertime_smoothforecast1 <- forecast(gendertime_smoothforecast, h =10)
gendertime_smoothforecast1
plot(gendertime_smoothforecast1)
acf(gendertime_smoothforecast1$residuals, lag.max = 10, na.action = na.pass)
Box.test(gendertime_smoothforecast1$residuals, lag = 3, type ="Ljung-Box")
plot.ts(gendertime_smoothforecast1$residuals)
gendertime_smoothforecast1$residuals <-
gendertime_smoothforecast1$residuals[!is.na(gendertime_smoothforecast1$residual)]
plotForecastErrors <- function(forecasterrors)
{
# make a histogram of the forecast errors:
mybinsize <- IQR(forecasterrors)/4
mysd <- sd(forecasterrors)
mymin <- min(forecasterrors) - mysd*5
mymax <- max(forecasterrors) + mysd*3
# generate normally distributed data with mean 0 and standard deviation mysd
mynorm <- rnorm(10000, mean=0, sd=mysd)
mymin2 <- min(mynorm)
mymax2 <- max(mynorm)
if (mymin2 < mymin) { mymin <- mymin2 }
if (mymax2 > mymax) { mymax <- mymax2 }
# make a red histogram of the forecast errors, with the normally distributed data overlaid:
mybins <- seq(mymin, mymax, mybinsize)
hist(forecasterrors, col="red", freq=FALSE, breaks=mybins)
# freq=FALSE ensures the area under the histogram = 1
# generate normally distributed data with mean 0 and standard deviation mysd
myhist <- hist(mynorm, plot=FALSE, breaks=mybins)
# plot the normal curve as a blue line on top of the histogram of forecast errors:
points(myhist$mids, myhist$density, type="l", col="blue", lwd=2)
}
plotForecastErrors(gendertime_smoothforecast1$residuals)
plot.ts(gendertime)
acf(gendertime, na.action = na.pass, lag.max = 10)
pacf(gendertime, na.action = na.pass, lag.max = 10)
adf.test(gendertime)
gendermodel <- auto.arima(gendertime, ic = "aic", trace = TRUE)
gendermodel
acf(ts(gendermodel$residuals))
pacf(ts(gendermodel$residuals))
genderforcast <- forecast(gendermodel, h =10)
genderforcast
plot(genderforcast)
acf(genderforcast$residuals, na.action = na.pass, lag.max = 10)
Box.test(genderforcast$residuals, lag = 5, type = "Ljung-Box")
Box.test(genderforcast$residuals, lag = 8, type = "Ljung-Box")
plot.ts(genderforcast$residuals)
plotForecastErrors <- function(forecasterrors)
{
# make a histogram of the forecast errors:
mybinsize <- IQR(forecasterrors)/4
mysd <- sd(forecasterrors)
mymin <- min(forecasterrors) - mysd*5
mymax <- max(forecasterrors) + mysd*3
# generate normally distributed data with mean 0 and standard deviation mysd
mynorm <- rnorm(10000, mean=0, sd=mysd)
mymin2 <- min(mynorm)
mymax2 <- max(mynorm)
if (mymin2 < mymin) { mymin <- mymin2 }
if (mymax2 > mymax) { mymax <- mymax2 }
# make a red histogram of the forecast errors, with the normally distributed data overlaid:
mybins <- seq(mymin, mymax, mybinsize)
hist(forecasterrors, col="red", freq=FALSE, breaks=mybins)
# freq=FALSE ensures the area under the histogram = 1
# generate normally distributed data with mean 0 and standard deviation mysd
myhist <- hist(mynorm, plot=FALSE, breaks=mybins)
# plot the normal curve as a blue line on top of the histogram of forecast errors:
points(myhist$mids, myhist$density, type="l", col="blue", lwd=2)
}
genderforcast$residuals <-
genderforcast$residuals[!is.na(genderforcast$residuals)]
plotForecastErrors(genderforcast$residuals)
